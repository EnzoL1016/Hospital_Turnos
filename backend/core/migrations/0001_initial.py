# Generated by Django 5.2.5 on 2025-10-09 23:04

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nombre_completo', models.CharField(max_length=200)),
                ('rol', models.CharField(choices=[('PACIENTE', 'Paciente'), ('PROFESIONAL', 'Profesional'), ('ADMIN', 'Administrador')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recordatorio_enviado', models.BooleanField(default=False)),
                ('titulo', models.CharField(max_length=255)),
                ('mensaje', models.TextField()),
                ('tipo', models.CharField(choices=[('TURNO_RESERVADO', 'Turno Reservado'), ('TURNO_CANCELADO', 'Turno Cancelado'), ('TURNO_ESTADO_ACTUALIZADO', 'Estado del Turno Actualizado'), ('RECORDATORIO_24H', 'Recordatorio de Turno (24h)'), ('NUEVA_AGENDA', 'Nueva Agenda Disponible')], max_length=50)),
                ('leida', models.BooleanField(db_index=True, default=False)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('url_destino', models.CharField(blank=True, max_length=512, null=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dni', models.CharField(max_length=8, unique=True)),
                ('nombre_completo', models.CharField(max_length=200)),
                ('fecha_nacimiento', models.DateField()),
                ('telefono', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('direccion', models.CharField(max_length=300)),
                ('obra_social', models.CharField(blank=True, max_length=100, null=True)),
                ('numero_afiliado', models.CharField(blank=True, max_length=50, null=True)),
                ('usuario', models.OneToOneField(limit_choices_to={'rol': 'PACIENTE'}, on_delete=django.db.models.deletion.CASCADE, related_name='paciente', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profesional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricula', models.CharField(max_length=20, unique=True)),
                ('especialidad', models.CharField(max_length=100)),
                ('telefono', models.CharField(max_length=20)),
                ('horario_inicio', models.TimeField(default='08:00')),
                ('horario_fin', models.TimeField(default='18:00')),
                ('dias_atencion', models.JSONField(default=list, help_text='Lista de días de atención: ["lunes", "martes", ...]')),
                ('duracion_turno', models.PositiveIntegerField(default=30, help_text='Duración del turno en minutos')),
                ('usuario', models.OneToOneField(limit_choices_to={'rol': 'PROFESIONAL'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Profesionales',
            },
        ),
        migrations.CreateModel(
            name='Agenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mes', models.DateField(help_text='Primer día del mes de la agenda')),
                ('horario_inicio', models.TimeField()),
                ('horario_fin', models.TimeField()),
                ('duracion_turno', models.PositiveIntegerField(help_text='Duración del turno en minutos')),
                ('dias_no_disponibles', models.JSONField(default=list, help_text='Lista de fechas no disponibles en formato YYYY-MM-DD')),
                ('profesional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.profesional')),
            ],
            options={
                'verbose_name_plural': 'Agendas',
            },
        ),
        migrations.CreateModel(
            name='Turno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('estado', models.CharField(choices=[('DISPONIBLE', 'Disponible'), ('PROGRAMADO', 'Programado'), ('ASISTIO', 'Asistió'), ('CANCELADO', 'Cancelado'), ('NO_ASISTIO', 'No Asistió')], default='DISPONIBLE', max_length=15)),
                ('motivo_consulta', models.TextField(blank=True, null=True)),
                ('motivo_cancelacion', models.TextField(blank=True, null=True)),
                ('justificacion', models.TextField(blank=True, null=True)),
                ('agenda', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='turnos', to='core.agenda')),
                ('paciente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.paciente')),
                ('profesional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.profesional')),
            ],
            options={
                'verbose_name_plural': 'Turnos',
            },
        ),
        migrations.CreateModel(
            name='Inasistencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('justificacion', models.TextField(blank=True, help_text='Explicación / justificativo enviado por el paciente', null=True)),
                ('estado_justificacion', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('JUSTIFICADA', 'Justificada'), ('INJUSTIFICADA', 'Injustificada')], default='INJUSTIFICADA', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inasistencias', to='core.paciente')),
                ('turno', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inasistencia', to='core.turno')),
            ],
            options={
                'verbose_name_plural': 'Inasistencias',
            },
        ),
        migrations.AddIndex(
            model_name='profesional',
            index=models.Index(fields=['matricula'], name='core_profes_matricu_1b39ff_idx'),
        ),
        migrations.AddIndex(
            model_name='profesional',
            index=models.Index(fields=['especialidad'], name='core_profes_especia_c42f4d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='agenda',
            unique_together={('profesional', 'mes')},
        ),
        migrations.AddIndex(
            model_name='turno',
            index=models.Index(fields=['fecha'], name='core_turno_fecha_2809c5_idx'),
        ),
        migrations.AddIndex(
            model_name='turno',
            index=models.Index(fields=['profesional', 'fecha'], name='core_turno_profesi_7db6a9_idx'),
        ),
        migrations.AddIndex(
            model_name='turno',
            index=models.Index(fields=['paciente'], name='core_turno_pacient_75896d_idx'),
        ),
        migrations.AddIndex(
            model_name='turno',
            index=models.Index(fields=['estado'], name='core_turno_estado_a3d56d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='turno',
            unique_together={('profesional', 'fecha', 'hora_inicio')},
        ),
    ]
